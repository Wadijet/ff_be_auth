# Mẫu đầy đủ các route CRUD cho 1 module (ví dụ: role)
# Có thể áp dụng cho các module CRUD khác bằng cách thay prefix và quyền tương ứng
# Chú thích: method = phương thức HTTP, path = đường dẫn, mô_tả = giải thích chức năng, quyền = quyền truy cập

role:
  - method: POST
    path: /api/v1/role/insert-one
    mô_tả: Thêm một vai trò mới
    quyền: Role.Insert
  - method: POST
    path: /api/v1/role/insert-many
    mô_tả: Thêm nhiều vai trò mới
    quyền: Role.Insert
  - method: GET
    path: /api/v1/role/find
    mô_tả: Tìm kiếm danh sách vai trò
    quyền: Role.Read
  - method: GET
    path: /api/v1/role/find-one
    mô_tả: Tìm một vai trò theo điều kiện
    quyền: Role.Read
  - method: GET
    path: /api/v1/role/find-by-id/:id
    mô_tả: Tìm vai trò theo ID
    quyền: Role.Read
  - method: POST
    path: /api/v1/role/find-by-ids
    mô_tả: Tìm nhiều vai trò theo danh sách ID
    quyền: Role.Read
  - method: GET
    path: /api/v1/role/find-with-pagination
    mô_tả: Tìm kiếm vai trò có phân trang
    quyền: Role.Read
  - method: PUT
    path: /api/v1/role/update-one
    mô_tả: Cập nhật một vai trò theo điều kiện
    quyền: Role.Update
  - method: PUT
    path: /api/v1/role/update-many
    mô_tả: Cập nhật nhiều vai trò
    quyền: Role.Update
  - method: PUT
    path: /api/v1/role/update-by-id/:id
    mô_tả: Cập nhật vai trò theo ID
    quyền: Role.Update
  - method: PUT
    path: /api/v1/role/find-one-and-update
    mô_tả: Tìm và cập nhật một vai trò
    quyền: Role.Update
  - method: DELETE
    path: /api/v1/role/delete-one
    mô_tả: Xoá một vai trò theo điều kiện
    quyền: Role.Delete
  - method: DELETE
    path: /api/v1/role/delete-many
    mô_tả: Xoá nhiều vai trò
    quyền: Role.Delete
  - method: DELETE
    path: /api/v1/role/delete-by-id/:id
    mô_tả: Xoá vai trò theo ID
    quyền: Role.Delete
  - method: DELETE
    path: /api/v1/role/find-one-and-delete
    mô_tả: Tìm và xoá một vai trò
    quyền: Role.Delete
  - method: GET
    path: /api/v1/role/count
    mô_tả: Đếm số lượng vai trò
    quyền: Role.Read
  - method: GET
    path: /api/v1/role/distinct
    mô_tả: Lấy giá trị duy nhất của một trường trong vai trò
    quyền: Role.Read
  - method: POST
    path: /api/v1/role/upsert-one
    mô_tả: Upsert (thêm mới hoặc cập nhật) một vai trò
    quyền: Role.Update
  - method: POST
    path: /api/v1/role/upsert-many
    mô_tả: Upsert nhiều vai trò
    quyền: Role.Update
  - method: GET
    path: /api/v1/role/exists
    mô_tả: Kiểm tra sự tồn tại của vai trò
    quyền: Role.Read

# Lưu ý: Để áp dụng cho module khác, chỉ cần thay 'role' bằng tên module và cập nhật quyền tương ứng. 

# Danh sách các module CRUD có thể áp dụng mẫu này:
# (Chỉ cần thay 'role' bằng tên module tương ứng)
#
# - user
# - permission
# - role
# - role_permission
# - user_role
# - agent
# - access_token
# - fb_page
# - fb_post
# - fb_conversation
# - fb_message
# - pancake_order 

# ===========================
# CẤU TRÚC CHUNG DATA/PARAM/QUERY CHO CRUD API
# ===========================
# Tham khảo chi tiết xử lý tại: handler.base.crud.go

# 1. Param (tham số trên URL)
#   - :id (ID của đối tượng, dạng chuỗi)
#   - :field (tên trường, dùng cho distinct)
#
# Ví dụ:
#   /api/v1/{module}/find-by-id/:id
#   /api/v1/{module}/update-by-id/:id
#   /api/v1/{module}/distinct/:field

# 2. Query (tham số truy vấn)
#   - filter: điều kiện lọc (JSON, string)
#   - options: tuỳ chọn MongoDB (JSON, string, ví dụ: projection, sort)
#   - page: số trang (int, mặc định 1)
#   - limit: số lượng mỗi trang (int, mặc định 10)
#   - ids: danh sách ID (JSON array, dùng cho find-by-ids)
#
# Ví dụ:
#   /api/v1/{module}/find-with-pagination?filter={...}&page=1&limit=20
#   /api/v1/{module}/find-by-ids?ids=["id1","id2"]

# 3. Data (body)
#   - Insert One:
#       { <trường dữ liệu của model> }
#   - Insert Many (Batch):
#       [ { <trường dữ liệu của model> }, ... ]
#   - Update One:
#       { <trường cần cập nhật> }
#   - Update Many (Batch):
#       [ { filter: { ... }, update: { ... } }, ... ]
#   - Upsert:
#       { filter: { ... }, update: { ... } }
#   - Upsert Many (Batch):
#       [ { filter: { ... }, update: { ... } }, ... ]
#   - Find by IDs (Batch):
#       { ids: ["id1", "id2", ...] }
#
# Lưu ý: <trường dữ liệu của model> là các trường tuỳ theo từng module (tham khảo schema/model tương ứng)
#
# Mọi API đều nhận/đẩy dữ liệu dạng JSON chuẩn. 